#include <LiquidCrystal.h> 
#include <Servo.h>

#define echoPin 22 // Echo Pin
#define trigPin 23 // Trigger Pin

LiquidCrystal lcd(2, 3, 4, 5, 6, 7); 

Servo myservo;

int tempPin = A0;   // the output pin of LM35 

int motor1Pin1 = 24; // pin 2 on L293D IC
int motor1Pin2 = 25; // pin 7 on L293D IC
int motor2Pin1 = 26; // pin 10 on L293D IC
int motor2Pin2 = 27; // pin 15 on L293D IC

int state;

int cont1;
int cont2;

int temp;

int Alarm;

int S_FIR = A1;

int S_L = A2;
int S_F = A3;
int S_R = A4;


int PMP = 8;

int light1;
int light2;
int light3;


int pos1 = 90;

long duration, distance; // Duration used to calculate distance

void setup() {
    // sets the pins as outputs:
      
pinMode(motor1Pin1, OUTPUT);
pinMode(motor1Pin2, OUTPUT);
pinMode(motor2Pin1, OUTPUT);
pinMode(motor2Pin2, OUTPUT);

 pinMode(PMP, OUTPUT);
 
 pinMode(11, OUTPUT);

pinMode(tempPin, INPUT);

myservo.attach(9);
  
 pinMode(trigPin, OUTPUT);
 pinMode(echoPin, INPUT);
     
pinMode(S_L, INPUT);
pinMode(S_F, INPUT);
pinMode(S_R, INPUT);

Serial2.begin(9600); 
Serial1.begin(9600);
Serial.begin(9600);
lcd.begin(16, 2); 
lcd.clear(); 
lcd.setCursor(0, 0);  
lcd.print(" Fire Figheting ");
lcd.setCursor(0, 1);  
lcd.print("      Rebot     ");
digitalWrite(11, HIGH); 
Serial2.print("AT\r\n");  // set SMS mode to text
delay(1000);
Serial2.print("AT+CMGF=1\r\n");  // set SMS mode to text
delay(1000);
sim();
delay(1000);
Serial2.print("ON GSM"); // Message contents
delay(1000);
Serial2.write(byte(26)); // (signals end of message)
delay(1000);
digitalWrite(11, LOW); 
lcd.clear(); 
}

void loop() {
    //if some date is sent, reads it and saves in state
if(Serial1.available() > 0)
{     
state = Serial1.read();   
}

temp = analogRead(tempPin);
temp = temp * 0.48828125;

digitalWrite(trigPin, LOW);
delayMicroseconds(2);
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
duration = pulseIn(echoPin, HIGH);
distance = duration/58.2;



Alarm = analogRead(S_FIR);
Alarm = 100 - Alarm /10.24; 

lcd.setCursor(3,0);
lcd.print("Temp=  ");
lcd.print(temp);
lcd.print("c "); 

lcd.setCursor(0,1);
lcd.print("D= ");
lcd.print(distance);
lcd.print("cm  "); 

lcd.setCursor(8,1);
lcd.print("F= ");
lcd.print(Alarm);
lcd.print("  "); 
  
if (state == 'L') 
{
if(distance>=30)
{  
digitalWrite(motor1Pin1, HIGH); 
digitalWrite(motor1Pin2, LOW); 
digitalWrite(motor2Pin1, LOW);
digitalWrite(motor2Pin2, HIGH);
}
if(distance<30)
{  
digitalWrite(motor1Pin1, LOW); 
digitalWrite(motor1Pin2, HIGH); 
digitalWrite(motor2Pin1, LOW);
digitalWrite(motor2Pin2, HIGH);
}
}

if (state == 'R') 
{
digitalWrite(motor1Pin1, LOW); 
digitalWrite(motor1Pin2, HIGH); 
digitalWrite(motor2Pin1, HIGH);
digitalWrite(motor2Pin2, LOW);
}        

if (state == 'N') 
{
digitalWrite(motor1Pin1, HIGH); 
digitalWrite(motor1Pin2, LOW); 
digitalWrite(motor2Pin1, HIGH);
digitalWrite(motor2Pin2, LOW);
}   

if (state == 'P') 
{
digitalWrite(motor1Pin1, LOW); 
digitalWrite(motor1Pin2, HIGH); 
digitalWrite(motor2Pin1, LOW);
digitalWrite(motor2Pin2, HIGH);
}   

if (state == 'O') 
{
digitalWrite(PMP, LOW);
digitalWrite(motor1Pin1, LOW); 
digitalWrite(motor1Pin2, LOW); 
digitalWrite(motor2Pin1, LOW);
digitalWrite(motor2Pin2, LOW);
}   

if(state == 'K' ) 
{
pos1 = pos1+1;
myservo.write(pos1);  
if(pos1 > 150) 
{
pos1 = 150; 
}  
}

if(state == 'M' ) 
{
pos1 = pos1-1;
myservo.write(pos1);  
if(pos1 < 30) 
{
pos1 = 30; 
}  
}

if (state == 'S') 
{
digitalWrite(PMP, HIGH);
}  

if (state == 'Q') 
{
digitalWrite(PMP, LOW);
digitalWrite(motor1Pin1, LOW); 
digitalWrite(motor1Pin2, LOW); 
digitalWrite(motor2Pin1, LOW);
digitalWrite(motor2Pin2, LOW);  
ato();  
}  
delay(200);
}

void ato()
{
state = '0';
while(1)
{
if(Serial1.available() > 0)
{     
state = Serial1.read();   
}  

temp = analogRead(tempPin);
temp = temp * 0.48828125;

digitalWrite(trigPin, LOW);
delayMicroseconds(2);
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
duration = pulseIn(echoPin, HIGH);
distance = duration/58.2;

Alarm = analogRead(S_FIR);
Alarm = 100 - Alarm /10.24; 

lcd.setCursor(3,0);
lcd.print("Temp=  ");
lcd.print(temp);
lcd.print("c "); 

lcd.setCursor(0,1);
lcd.print("D= ");
lcd.print(distance);
lcd.print("cm  "); 

lcd.setCursor(8,1);
lcd.print("F= ");
lcd.print(Alarm);
lcd.print("  "); 

if (state == 'Q') 
{  
state = '0';  
break;  
} 

light1 = analogRead(S_L);
light1 = 100 - light1 /10.24; 

light2 = analogRead(S_F);
light2 = 100 - light2 /10.24; 

light3 = analogRead(S_R);
light3 = 100 - light3 /10.24; 

if(temp>=50)
{
digitalWrite(11, HIGH);   
sim();
delay(1000);
Serial2.print("High Temp Alarm"); // Message contents
delay(500);
Serial2.write(byte(26)); // (signals end of message)
delay(500);  
digitalWrite(11, LOW);   
  }


if(Alarm>=60)
{
digitalWrite(PMP, HIGH);
if(cont1==0)
{
digitalWrite(11, HIGH);   
sim();
delay(1000);
Serial2.print("Fire Alert"); // Message contents
delay(500);
Serial2.write(byte(26)); // (signals end of message)
delay(500);  
digitalWrite(11, LOW); 
 } 
 cont1=1;  
 cont2=0; 
 }
 
if(Alarm<55)
{
if(cont2==0)
{
digitalWrite(11, HIGH);   
sim();
delay(1000);
Serial2.print("All Clear"); // Message contents
delay(500);
Serial2.write(byte(26)); // (signals end of message)
delay(500);  
//sim2();
//delay(1000);
//Serial2.print("All Clear"); // Message contents
//delay(500);
//Serial2.write(byte(26)); // (signals end of message)
//delay(500); 
digitalWrite(11, LOW); 
 } 
 cont2=1; 
 cont1=0;    
digitalWrite(PMP, LOW);    
}

if(light2>20)
{
 
if(light1> light3)
{
pos1 = pos1-1;
myservo.write(pos1);  
if(pos1 < 30) 
{
pos1 = 30; 
}
}


if(light3> light1)
{
pos1 = pos1+1;
myservo.write(pos1);  
if(pos1 > 150) 
{
pos1 = 150; 
} 
}  
}



Serial.print("LDR 1=");
Serial.println(light1);
Serial.print("LDR 2=");
Serial.println(light2);
Serial.print("LDR 3=");
Serial.println(light3);
delay(200);
} 
}


 void sim(){Serial2.println("AT+CMGS=\"+923150635639\"\r\n");}
 
 //void sim2(){Serial2.println("AT+CMGS=\"+923150635639\"\r\n");}